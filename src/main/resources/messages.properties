correct=Your solution is correct.
incorrect=Your solution is incorrect.
input=Your Input: {0}
criterium.value=Value
defaultTaskDescription=\
    \ <b>Task Overview</b><br><br>\
    \ Data Points: {0}<br>\
    \ Initial centroids: {1}.<br><br>\
    \ \
    \ <b>Task Instruction</b><br><br>\
    \ Perform the k-means algorithm on the given {2} data points by assigning them to the {3} clusters.<br>\
    \ Use the {4} distance for your calculations.<br><br>\
    \ \
    \ <b>Distance Formula</b><br><br>\
    \ The formula for the {4} distance is: {5}.<br><br>\
    \ \
    \ <b>Answer Format</b><br><br>\
    \ Use the following syntax:<br>\
    \ <code>[(x,y): A,B,...]; [(x,y): C,D,...]</code><br><br>\
    \ - (x,y) represents the cluster center<br>\
    \ - The points after the colon are the data points assigned to that cluster<br>\
    \ - Clusters within the same iteration are separated by a semicolon ;<br>\
    \ - Multiple iterations are separated by a line containing only two dashes: <code>--</code><br>\
    \ - Use dots . as decimal separators<br><br>\
    \ \
    \ <b>Example</b><br><br>\
    \ <code>\
    \ [(36,50): J]; [(40,41): B, D]<br>\
    \ --<br>\
    \ [(38.84,49.70): B, J]; [(35.90,43.20): D]<br>\
    \ --<br>\
    \ [(37.30,47.60): B, J]; [(33.80,44.10): D]\
    \ </code><br><br> \
    \ {6}<br><br>\
    \ \
    \ <b>Note</b><br>\
    \ Always round your results to two decimal places.<br>\
    \ The order of clusters is arbitrary.<br>\
    \ If a data point has the exact same distance to multiple centroids, it will be assigned to the one that appears first in the list (e.g., C1 before C2).

distanceMetric.EUCLIDEAN=euclidean
distanceMetric.MANHATTAN=manhattan
formula.EUCLIDEAN= dist = sqrt((x2-x1)² + (y2-y1)²)
formula.MANHATTAN=dist = |x2 - x1| + |y2 - y1|

error.iteration=Error in iteration: {0}.
error.expected=Expected: {0}
error.actual=Actual: {0}
error.inputFormat=Invalid input format.
evaluation.summary={0} of {1} iterations were evaluated correctly.
error.inputEmpty=Input is empty.
error.labelUnknown=Unknown point label: {0}
error.unmatchedClusters=Could not parse the following cluster(s):\n{0}\nPlease check the format (e.g., [(10.43,16.33): A, B];[(66.31,78.45): C, D])
error.duplicateLabels=Duplicate labels in iteration: {0}
error.missingLabels=Missing labels in iteration: {0}
error.emptyIteration=Invalid or empty iteration block:\n{0}

criterium.clustering.incomplete=Wrong number of iterations have been submitted ({0}/{1}).
criterium.clustering.correct=Clustering Evaluation
criterium.clustering.detail=You evaluated {0} out of {1} iterations correctly.
criterium.clustering.error=Error
criterium.clustering.hint=Hint
criterium.clustering.solution=Solution
criterium.clustering.instructions=Instructions
criterium.maxPoints=Maximum Points
criterium.achievedPoints=Achieved Points
criterium.visualization=Visualization
criterium.syntaxError=Syntax Error
criterium.clustering.centroidCount=Centroid Matching
criterium.clustering.centroidsMatched={0} out of {1} centroids matched correctly.
criterium.deduction.title=Point deduction
criterium.deduction.wrongClusters=Wrong amount of clusters.
criterium.deduction.wrongIterations=Wrong amount of iterations.
criterium.deduction.wrongCentroids=Wrong coordinate of centroid.
criterium.deduction.wrongAssignment=Wrong assignment of data point.

hint.centroidError=Centroid coordinates incorrect. Maybe try recalculating the centroid position?
hint.assignmentError=Data point assigned incorrectly. Maybe try recalculating the distances?
hint.clusterCountError=Number of clusters provided incorrect. Should be: {0}. Is: {1}.
hint.iterationCountError=Try finishing the optimization by recalculating the centroid positions.

legend.title=Legend
legend.clusterDataPoints=Data Points Cluster {0}
legend.dataPoint=Data Point
legend.centroid=Centroid
legend.hint.visualAid=Note: The circle does not represent the cluster, it is just a visual aid.

clustering.input.syntaxErrorAt=Syntax error close to: "{0}"

feedback.correctSyntax=No syntax errors.

doc.steps.title=Steps to solve the clustering task
doc.steps.initCenters=Initial cluster centers selected:
doc.steps.assignments=Assign each point to the nearest center by calculating distances:
doc.steps.recalculate=Recalculate the cluster centers:
doc.steps.converged=No more changes in centroids → Algorithm has converged.
doc.steps.initCenter.line=<li>Centroid C{0} = ({1,number,#.##}, {2,number,#.##})</li>
doc.steps.iteration.start=<li><b>Iteration {0}:</b><ul>
doc.steps.recalculate.skip=Centroids are given – no recalculation.
doc.steps.iteration.result=<li><i>Result for this iteration:</i><br><code>{0}</code></li></ul>
doc.steps.noPoints=<li>C{0}: No points → centroid unchanged</li>
doc.steps.newCentroid=<li>C{0}: new centroid = ({1,number,#.##}, {2,number,#.##})</li>
doc.steps.centroidFormula=<li>→ Calculation: x = {0} = {1,number,#.##} / {2}, y = {3} = {4,number,#.##} / {5}</li>
doc.steps.assignmentPrefix=<li>Point {0} ({1}, {2}):
doc.steps.euclideanFormula== √(({0} - {1,number,#.##})² + ({2} - {3,number,#.##})²)
doc.steps.manhattanFormula== |{0} - {1,number,#.##}| + |{2} - {3,number,#.##}|
doc.steps.assignmentDistance= {0} Distance to C{1} {2} = {3,number,#.##};
doc.steps.assignmentResult=→ Assigned to C{0}</li>
